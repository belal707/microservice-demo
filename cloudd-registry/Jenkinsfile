node {
  checkout scm
  //env.PATH = "${tool 'Maven3'}/bin:${env.PATH}"
  stage('Package') {
   
      sh 'mvn clean package -DskipTests'
    
  }

  stage('Create Docker Image') {
    
      docker.build("belalansari/testapi:${env.BUILD_NUMBER}")
  
  }

  /*stage ('Run Application') {
    try {
      // Start database container here
      // sh 'docker run -d --name db -p 8091-8093:8091-8093 -p 11210:11210 arungupta/oreilly-couchbase:latest'

      // Run application using Docker image
      sh "DB=`docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' db`"
      sh "docker run -e DB_URI=$DB arungupta/docker-jenkins-pipeline:${env.BUILD_NUMBER}"

      // Run tests using Maven
      //dir ('webapp') {
      //  sh 'mvn exec:java -DskipTests'
      //}*/
    } catch (error) {
    } finally {
      // Stop and remove database container here
      //sh 'docker-compose stop db'
      //sh 'docker-compose rm db'
    }
  }

  stage('Run Tests') {
    try {
      dir('webapp') {
        sh "mvn test"
        docker.build("belalansari/testapi:${env.BUILD_NUMBER}").push()
      }
    } catch (error) {

    } finally {
     // junit '**/target/surefire-reports/*.xml'
    }
  }
}
/*node("docker") {
    docker.withRegistry('belalansari', 'zamila1234') {
    
        git url: "https://github.com/belalansari23/microservice-demo.git", credentialsId: 'zamila1234'
    
        sh "git rev-parse HEAD > .git/commit-id"
        def commit_id = readFile('.git/commit-id').trim()
        println commit_id
    
        stage "build"
        def app = docker.build "cloudd-registry"
    
        stage "publish"
        app.push 'master'
        app.push "${commit_id}"
    }
}*/
